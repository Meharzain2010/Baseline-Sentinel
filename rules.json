[
  { "id": "no_console_log", "pattern": "console\\.log", "reason": "Avoid console.log in production.", "fix": "console.debug" },
  { "id": "console_log", "pattern": "console\\.log", "reason": "Avoid console.log in production.", "fix": "console.debug" },
  { "id": "no_var", "pattern": "\\bvar\\b", "reason": "Use let or const instead of var.", "fix": "let" },
  { "id": "no_const_reassign", "pattern": "const\\s+\\w+\\s*=.*;\\s*\\w+\\s*=", "reason": "Const variables cannot be reassigned.", "fix": "let" },
{
  "id": "eqeqeq","pattern": "(?<![=<>!])==(?!=)","reason": "Use strict equality", "fix": "==="},
  { "id": "no_document_write", "pattern": "document\\.write", "reason": "document.write is unsafe.", "fix": "document.body.appendChild" },
  { "id": "no_eval", "pattern": "\\beval\\(", "reason": "Avoid eval() for security reasons.", "fix": "JSON.parse" },
  { "id": "no_innerHTML", "pattern": "\\.innerHTML\\s*=", "reason": "Avoid innerHTML, use textContent.", "fix": "textContent" },
  { "id": "no_settimeout_string", "pattern": "setTimeout\\s*\\(\\s*['\"]", "reason": "Avoid string in setTimeout (like eval).", "fix": "setTimeout(() => {})" },
  { "id": "parseInt_radix", "pattern": "parseInt\\s*\\(\\s*[^,)]*\\)", "reason": "Always provide a radix to parseInt.", "fix": "parseInt(value, 10)" },
  { "id": "no_math_random", "pattern": "Math\\.random", "reason": "Math.random is not secure.", "fix": "crypto.getRandomValues(new Uint32Array(1))[0]" },

  { "id": "no_alert", "pattern": "alert\\(", "reason": "Avoid alert in production.", "fix": "console.warn" },
  { "id": "no_prompt", "pattern": "prompt\\(", "reason": "Avoid prompt dialogs in production.", "fix": "customInputDialog()" },
  { "id": "no_confirm", "pattern": "confirm\\(", "reason": "Avoid confirm dialogs.", "fix": "customConfirmDialog()" },
  { "id": "no_debugger", "pattern": "\\bdebugger\\b", "reason": "Remove debugger statements.", "fix": "// debugger removed" },
  { "id": "no_with", "pattern": "\\bwith\\s*\\(", "reason": "Avoid 'with'.", "fix": "// rewrite without with()" },

  { "id": "no_function_constructor", "pattern": "new Function", "reason": "Function constructor is unsafe.", "fix": "function safe() {}" },
  { "id": "no_for_in", "pattern": "for\\s*\\([^)]*in[^)]*\\)", "reason": "Avoid for...in.", "fix": "Object.keys(obj).forEach" },
  { "id": "no_array_push", "pattern": "\\.push\\(", "reason": "Prefer spread operator over push in immutables.", "fix": "[...arr, value]" },
  { "id": "no_array_splice", "pattern": "\\.splice\\(0\\)", "reason": "Avoid splice(0) to clear arrays.", "fix": "arr.length = 0" },
  { "id": "no_object_assign_clone", "pattern": "Object\\.assign\\(\\{\\},", "reason": "Use spread instead of Object.assign for clone.", "fix": "{...obj}" },

  { "id": "no_window_event", "pattern": "window\\.event", "reason": "window.event is non-standard.", "fix": "event" },
  { "id": "no_document_all", "pattern": "document\\.all", "reason": "document.all is deprecated.", "fix": "document.querySelectorAll('*')" },
  { "id": "no_escape", "pattern": "\\bescape\\(", "reason": "escape() is deprecated.", "fix": "encodeURIComponent" },
  { "id": "no_unescape", "pattern": "\\bunescape\\(", "reason": "unescape() is deprecated.", "fix": "decodeURIComponent" },
  { "id": "no_activeX", "pattern": "ActiveXObject", "reason": "ActiveXObject is obsolete.", "fix": "// remove ActiveX" },

  { "id": "no_outerHTML", "pattern": "\\.outerHTML\\s*=", "reason": "Avoid outerHTML replacement.", "fix": "replaceChild(newNode, oldNode)" },
  { "id": "no_sessionStorage", "pattern": "sessionStorage", "reason": "Avoid sensitive data in sessionStorage.", "fix": "secureStorage()" },
  { "id": "no_indexedDB_open", "pattern": "indexedDB\\.open", "reason": "Check IndexedDB support carefully.", "fix": "indexedDB.databases()" },
  { "id": "no_document_cookie", "pattern": "document\\.cookie", "reason": "document.cookie is insecure.", "fix": "Secure HttpOnly cookies" },

  { "id": "no_xmlhttp", "pattern": "XMLHttpRequest", "reason": "Use fetch instead of XHR.", "fix": "fetch(url)" },
  { "id": "no_innerText", "pattern": "\\.innerText", "reason": "innerText is non-standard, prefer textContent.", "fix": "textContent" },
  { "id": "no_node_clonenode_true", "pattern": "cloneNode\\(true\\)", "reason": "Avoid deep clone without care.", "fix": "structuredClone(node)" },
  { "id": "no_console_error", "pattern": "console\\.error", "reason": "Use logger instead of console.error.", "fix": "logger.error" },
  { "id": "no_console_warn", "pattern": "console\\.warn", "reason": "Use logger instead of console.warn.", "fix": "logger.warn" },

  { "id": "no_function_bind_in_loop", "pattern": "\\.bind\\(", "reason": "Avoid bind inside loops.", "fix": "use arrow functions" },
  { "id": "no_anonymous_setTimeout", "pattern": "setTimeout\\(", "reason": "Name your timeout callbacks.", "fix": "setTimeout(() => {" },
  { "id": "no_fixed_position", "pattern": "position:\\s*fixed", "reason": "Avoid fixed layout issues.", "fix": "position: sticky" },
  { "id": "no_inline_style", "pattern": "style\\s*=", "reason": "Avoid inline styles in HTML.", "fix": "use CSS classes" },
  { "id": "no_import_http", "pattern": "http://", "reason": "Avoid importing over HTTP.", "fix": "https://" },

  { "id": "no_object_prototype", "pattern": "Object\\.prototype", "reason": "Avoid extending Object.prototype.", "fix": "// remove prototype pollution" },
  { "id": "no_array_constructor", "pattern": "new Array\\(", "reason": "Avoid Array constructor (confusing).", "fix": "[]" },
  { "id": "no_boolean_constructor", "pattern": "new Boolean", "reason": "Avoid Boolean constructor.", "fix": "Boolean(value)" },
  { "id": "no_string_constructor", "pattern": "new String", "reason": "Avoid String constructor.", "fix": "\"text\"" },
  { "id": "no_number_constructor", "pattern": "new Number", "reason": "Avoid Number constructor.", "fix": "Number(value)" },

  { "id": "no_global_isNaN", "pattern": "\\bisNaN\\(", "reason": "Use Number.isNaN instead.", "fix": "Number.isNaN" },
  { "id": "no_global_isFinite", "pattern": "\\bisFinite\\(", "reason": "Use Number.isFinite instead.", "fix": "Number.isFinite" },
  { "id": "no_arguments_callee", "pattern": "arguments\\.callee", "reason": "arguments.callee is deprecated.", "fix": "named function" },
  { "id": "no_arguments_caller", "pattern": "arguments\\.caller", "reason": "arguments.caller is deprecated.", "fix": "named function" },
  { "id": "no_document_execCommand", "pattern": "document\\.execCommand", "reason": "execCommand is obsolete.", "fix": "modern Clipboard API" },
  { "id": "no_console_error", "pattern": "console.error", "reason": "Avoid console.error, use proper error logger.", "fix": "logger.error" },
  { "id": "no_console_warn", "pattern": "console.warn", "reason": "Avoid console.warn, use proper warning logger.", "fix": "logger.warn" },
  { "id": "no_global_fetch", "pattern": "\\bfetch\\(", "reason": "Wrap fetch with error handling or custom API client.", "fix": "apiClient.get" },
  { "id": "no_then", "pattern": "\\.then\\(", "reason": "Prefer async/await over promise chaining.", "fix": "await" },
  { "id": "no_catch_empty", "pattern": "catch\\s*\\(.*\\)\\s*\\{\\s*\\}", "reason": "Empty catch blocks hide errors.", "fix": "catch(e) { console.error(e); }" },
  { "id": "no_for_var", "pattern": "for\\s*\\(var", "reason": "Avoid var in loops, use let.", "fix": "for (let" },
  { "id": "no_indexOf_compare", "pattern": "\\.indexOf\\([^)]*\\)\\s*>\\s*-1", "reason": "Use includes() instead of indexOf() > -1.", "fix": ".includes" },
  { "id": "no_function_expression", "pattern": "function\\s*\\(", "reason": "Prefer arrow functions.", "fix": "() =>" },
  { "id": "no_require", "pattern": "require\\(", "reason": "Prefer ES modules (import) over require().", "fix": "import" },
  { "id": "no_module_exports", "pattern": "module.exports", "reason": "Prefer ES module export syntax.", "fix": "export default" },
  { "id": "no_document_cookie", "pattern": "document.cookie", "reason": "Direct cookie access is unsafe, use cookie utilities.", "fix": "Cookies.get()" },
  { "id": "no_math_random", "pattern": "Math.random\\(", "reason": "Math.random is not cryptographically secure.", "fix": "crypto.getRandomValues" },
  { "id": "no_innerText", "pattern": "\\.innerText", "reason": "Prefer textContent for better consistency.", "fix": ".textContent" },
  { "id": "no_outerHTML", "pattern": "\\.outerHTML", "reason": "Avoid replacing outerHTML directly.", "fix": "use DOM APIs" },
  { "id": "no_childNodes", "pattern": "\\.childNodes", "reason": "Prefer children over childNodes.", "fix": ".children" },
  { "id": "no_charCodeAt", "pattern": "\\.charCodeAt", "reason": "charCodeAt is deprecated, use codePointAt.", "fix": ".codePointAt" },
  { "id": "no_substr", "pattern": "\\.substr\\(", "reason": "substr is deprecated, use substring or slice.", "fix": ".slice" },
  { "id": "no_escape_html", "pattern": "\\.outerHTML\\s*=", "reason": "Setting outerHTML can cause XSS.", "fix": "DOM createElement / appendChild" },
  { "id": "no_alert", "pattern": "alert\\(", "reason": "Avoid alert(), use proper UI dialogs.", "fix": "ui.showDialog" },
  { "id": "no_confirm", "pattern": "confirm\\(", "reason": "Avoid confirm(), use custom modal dialogs.", "fix": "ui.showConfirm" },
  { "id": "no_prompt", "pattern": "prompt\\(", "reason": "Avoid prompt(), use custom input dialog.", "fix": "ui.showPrompt" },
  { "id": "no_debugger", "pattern": "debugger", "reason": "Remove debugger statements.", "fix": "" },
  { "id": "no_console_table", "pattern": "console.table", "reason": "Avoid console.table in production.", "fix": "logger.table" },
  { "id": "no_console_time", "pattern": "console.time", "reason": "Avoid console.time, use performance APIs.", "fix": "performance.now" },
  { "id": "no_console_group", "pattern": "console.group", "reason": "Avoid console.group in production.", "fix": "logger.group" },
  { "id": "no_setInterval_string", "pattern": "setInterval\\(\\s*['\"]", "reason": "Avoid string in setInterval (eval-like).", "fix": "setInterval(() => {})" },
  { "id": "no_setTimeout_string", "pattern": "setTimeout\\(\\s*['\"]", "reason": "Avoid string in setTimeout (eval-like).", "fix": "setTimeout(() => {})" },
  { "id": "no_with", "pattern": "\\bwith\\s*\\(", "reason": "with() is forbidden in strict mode.", "fix": "explicit object access" },
  { "id": "no_document_write", "pattern": "document.write", "reason": "document.write is unsafe.", "fix": "DOM manipulation APIs" },
  { "id": "no_eval", "pattern": "eval\\(", "reason": "Avoid eval for security reasons.", "fix": "safeParser()" },
  { "id": "no_function_constructor", "pattern": "new Function", "reason": "Function constructor is unsafe.", "fix": "regular function" },
  { "id": "no_object_assign", "pattern": "Object.assign", "reason": "Use spread operator instead of Object.assign.", "fix": "{ ...obj }" },
  { "id": "no_object_defineProperty", "pattern": "Object.defineProperty", "reason": "Prefer class fields or direct assignment.", "fix": "obj.key = value" },
  { "id": "no_object_prototype", "pattern": "Object.prototype", "reason": "Avoid extending Object.prototype.", "fix": "custom prototype" },
  { "id": "no_array_constructor", "pattern": "new Array\\(", "reason": "Avoid Array constructor, use literals.", "fix": "[]" },
  { "id": "no_array_splice_remove", "pattern": "\\.splice\\(", "reason": "Be careful with splice(), use filter instead.", "fix": "array.filter()" },
  { "id": "no_array_sort_default", "pattern": "\\.sort\\(\\)", "reason": "Array.sort() without comparator is unreliable.", "fix": "array.sort((a,b)=>a-b)" },
  { "id": "no_for_in", "pattern": "for\\s*\\(.*in.*\\)", "reason": "Avoid for...in over arrays.", "fix": "for...of" },
  { "id": "no_document_getElementById", "pattern": "document.getElementById", "reason": "Use querySelector for consistency.", "fix": "document.querySelector" },
  { "id": "no_document_getElementsByClassName", "pattern": "getElementsByClassName", "reason": "Prefer querySelectorAll.", "fix": "document.querySelectorAll" },
  { "id": "no_document_getElementsByTagName", "pattern": "getElementsByTagName", "reason": "Prefer querySelectorAll.", "fix": "document.querySelectorAll" },
  { "id": "no_inline_style", "pattern": "\\.style\\.", "reason": "Avoid inline styles in JS.", "fix": "CSS classes" },
  { "id": "no_element_setAttribute_style", "pattern": "setAttribute\\(['\"]style", "reason": "Avoid inline style via setAttribute.", "fix": "classList.add" },
  { "id": "no_addEventListener_inline", "pattern": "addEventListener\\(['\"][^'\"]+['\"],\\s*['\"]", "reason": "Avoid inline string handlers.", "fix": "addEventListener('click', () => {})" },
  { "id": "no_window_open", "pattern": "window.open", "reason": "Avoid window.open (popup blockers).", "fix": "router.navigate" },
  { "id": "no_window_location_assign", "pattern": "window.location\\s*=", "reason": "Avoid direct assignment, use router.", "fix": "router.push" },
  { "id": "no_window_reload", "pattern": "location.reload", "reason": "Avoid reload(), re-render instead.", "fix": "router.refresh" },
  { "id": "no_window_history_back", "pattern": "history.back", "reason": "Avoid history.back, use router.", "fix": "router.goBack" },
  { "id": "no_innerHTML", "pattern": "\\.innerHTML", "reason": "Avoid innerHTML, use textContent or DOM APIs.", "fix": "element.textContent" },
  { "id": "no_outerHTML", "pattern": "\\.outerHTML", "reason": "Avoid outerHTML assignment.", "fix": "element.replaceWith" },
  { "id": "no_document_all", "pattern": "document.all", "reason": "document.all is obsolete.", "fix": "document.querySelector" },
  { "id": "no_document_layers", "pattern": "document.layers", "reason": "document.layers is obsolete.", "fix": "DOM APIs" },
  { "id": "no_document_captureEvents", "pattern": "document.captureEvents", "reason": "captureEvents is obsolete.", "fix": "addEventListener" },
  { "id": "no_document_releaseEvents", "pattern": "document.releaseEvents", "reason": "releaseEvents is obsolete.", "fix": "removeEventListener" },
  { "id": "no_escape", "pattern": "\\bescape\\(", "reason": "escape() is deprecated.", "fix": "encodeURI" },
  { "id": "no_unescape", "pattern": "\\bunescape\\(", "reason": "unescape() is deprecated.", "fix": "decodeURI" },
  { "id": "no_isNaN", "pattern": "\\bisNaN\\(", "reason": "Prefer Number.isNaN.", "fix": "Number.isNaN" },
  { "id": "no_parseInt_no_radix", "pattern": "parseInt\\([^,]+\\)", "reason": "Always provide radix to parseInt.", "fix": "parseInt(x, 10)" },
  { "id": "no_setImmediate", "pattern": "setImmediate", "reason": "Non-standard API.", "fix": "setTimeout(fn, 0)" },
  { "id": "no_buffer_constructor", "pattern": "new Buffer", "reason": "Buffer constructor is unsafe.", "fix": "Buffer.from" },
  { "id": "no_process_exit", "pattern": "process.exit", "reason": "Avoid killing process abruptly.", "fix": "gracefulShutdown()" },
  { "id": "no_fs_sync", "pattern": "fs\\..*Sync", "reason": "Avoid sync FS in Node.js.", "fix": "fs.promises" },
  { "id": "no_child_process_exec", "pattern": "child_process.exec", "reason": "Avoid exec() (command injection risk).", "fix": "spawn" },
  { "id": "no_http", "pattern": "http\\.request", "reason": "Prefer HTTPS over HTTP.", "fix": "https.request" },
  { "id": "no_global_event", "pattern": "onload\\s*=", "reason": "Avoid inline onload.", "fix": "addEventListener" },
  { "id": "no_img_inline_onerror", "pattern": "<img[^>]+onerror=", "reason": "Avoid inline onerror (XSS risk).", "fix": "addEventListener" },
  { "id": "no_inline_script", "pattern": "<script[^>]*>", "reason": "Avoid inline scripts in HTML.", "fix": "external JS file" },
  { "id": "no_inline_css", "pattern": "<style[^>]*>", "reason": "Avoid inline styles.", "fix": "external CSS file" },
  { "id": "no_blink", "pattern": "<blink>", "reason": "<blink> is obsolete.", "fix": "CSS animation" },
  { "id": "no_marquee", "pattern": "<marquee>", "reason": "<marquee> is obsolete.", "fix": "CSS animation" },
  { "id": "no_center", "pattern": "<center>", "reason": "<center> is obsolete.", "fix": "CSS text-align" },
  { "id": "no_font_tag", "pattern": "<font>", "reason": "<font> is obsolete.", "fix": "CSS font styles" },
  { "id": "no_bgsound", "pattern": "<bgsound>", "reason": "<bgsound> is obsolete.", "fix": "audio element" },
  { "id": "no_keygen", "pattern": "<keygen>", "reason": "<keygen> is obsolete.", "fix": "input type='password'" },
  { "id": "no_big", "pattern": "<big>", "reason": "<big> is obsolete.", "fix": "CSS font-size" },
  { "id": "no_strike", "pattern": "<strike>", "reason": "<strike> is obsolete.", "fix": "CSS text-decoration: line-through" },
  { "id": "no_thead_valign", "pattern": "<thead[^>]+valign=", "reason": "valign is obsolete.", "fix": "CSS vertical-align" },
  { "id": "no_td_align", "pattern": "<td[^>]+align=", "reason": "align is obsolete.", "fix": "CSS text-align" },
  { "id": "no_tr_bgcolor", "pattern": "<tr[^>]+bgcolor=", "reason": "bgcolor is obsolete.", "fix": "CSS background-color" },
  { "id": "no_table_width_attr", "pattern": "<table[^>]+width=", "reason": "width attribute is obsolete.", "fix": "CSS width" },
  { "id": "no_style_type_textcss", "pattern": "type=['\"]text/css['\"]", "reason": "type=text/css is obsolete.", "fix": "" },
  { "id": "no_script_type_textjs", "pattern": "type=['\"]text/javascript['\"]", "reason": "type=text/javascript is obsolete.", "fix": "" },
  { "id": "no_async_function_no_await", "pattern": "async function[^}]+\\{[^}]*\\}", "reason": "Async function must use await.", "fix": "add await" },
  { "id": "no_empty_function", "pattern": "function\\s+\\w+\\s*\\(.*\\)\\s*\\{\\s*\\}", "reason": "Avoid empty functions.", "fix": "implement logic" },
  { "id": "no_todo_comment", "pattern": "TODO", "reason": "Resolve TODOs before commit.", "fix": "implement feature" },
  { "id": "no_any_type", "pattern": ": any", "reason": "Avoid TypeScript any type.", "fix": "specific type" },
  { "id": "no_nonnull_assertion", "pattern": "!\\.", "reason": "Avoid non-null assertions.", "fix": "safe optional chaining" },
  { "id": "no_ts_ignore", "pattern": "@ts-ignore", "reason": "Avoid suppressing TS errors.", "fix": "fix type issue" },
  { "id": "no_require_ensure", "pattern": "require.ensure", "reason": "Deprecated in Webpack.", "fix": "import()" },
  { "id": "no_componentWillReceiveProps", "pattern": "componentWillReceiveProps", "reason": "React lifecycle method is deprecated.", "fix": "useEffect" },
  { "id": "no_componentWillUpdate", "pattern": "componentWillUpdate", "reason": "React lifecycle method is deprecated.", "fix": "useEffect" },
  { "id": "no_unsafe_html", "pattern": "dangerouslySetInnerHTML", "reason": "Avoid dangerouslySetInnerHTML.", "fix": "safe rendering" },
  { "id": "no_inline_style_react", "pattern": "style=\\{", "reason": "Avoid inline styles in React.", "fix": "className" },
  { "id": "no_defaultProps_function", "pattern": "Component\\.defaultProps", "reason": "defaultProps is deprecated for functions.", "fix": "default parameters" },
  { "id": "no_findDOMNode", "pattern": "findDOMNode", "reason": "React findDOMNode is deprecated.", "fix": "ref" },
  { "id": "no_legacy_context", "pattern": "childContextTypes", "reason": "Legacy context API is deprecated.", "fix": "React.createContext" },
  { "id": "no_react_createClass", "pattern": "React.createClass", "reason": "createClass is deprecated.", "fix": "class extends React.Component" },
  { "id": "no_react_mixins", "pattern": "mixins:", "reason": "Mixins are deprecated.", "fix": "HOCs or hooks" },
  { "id": "no_css_zoom", "pattern": "zoom:", "reason": "CSS zoom is non-standard.", "fix": "transform: scale" },
  { "id": "no_css_expression", "pattern": "expression\\(", "reason": "CSS expression() is obsolete.", "fix": "modern CSS property" },
  { "id": "no_css_float", "pattern": "float:", "reason": "Avoid float-based layouts.", "fix": "flexbox or grid" },
  { "id": "no_css_important", "pattern": "!important", "reason": "Avoid !important in CSS.", "fix": "refactor CSS cascade" },
  { "id": "no_css_align_attr", "pattern": "align=", "reason": "HTML align attribute is obsolete.", "fix": "CSS text-align" },
  { "id": "no_var", "pattern": "\\bvar\\b", "reason": "Avoid var, use let or const.", "fix": "let" },
  { "id": "no_console_log", "pattern": "console\\.log", "reason": "Replace debug logs with console.debug or a proper logger.", "fix": "console.debug" },
  { "id": "no_console_warn", "pattern": "console\\.warn", "reason": "Use a proper logger instead of console.warn.", "fix": "logger.warn" },
  { "id": "no_console_error", "pattern": "console\\.error", "reason": "Use a proper logger instead of console.error.", "fix": "logger.error" },
  { "id": "eqeqeq", "pattern": "==", "reason": "Use strict equality ===.", "fix": "===" },
  { "id": "noteqeq", "pattern": "!=", "reason": "Use strict inequality !==.", "fix": "!==" },
  { "id": "no_with", "pattern": "\\bwith\\s*\\(", "reason": "Avoid with, it is deprecated.", "fix": "// remove with" },
  { "id": "no_eval", "pattern": "\\beval\\s*\\(", "reason": "Avoid eval for security reasons.", "fix": "// refactor to safe parsing" },
  { "id": "no_function_constructor", "pattern": "new Function", "reason": "Avoid Function constructor (security).", "fix": "(x) => { return x; }" },
  { "id": "no_alert", "pattern": "\\balert\\s*\\(", "reason": "Avoid alert(), use non-blocking UI.", "fix": "logger.info" },
  { "id": "no_confirm", "pattern": "\\bconfirm\\s*\\(", "reason": "Avoid confirm(), use modal dialog.", "fix": "showConfirmDialog" },
  { "id": "no_prompt", "pattern": "\\bprompt\\s*\\(", "reason": "Avoid prompt(), use input field.", "fix": "showInputDialog" },
  { "id": "no_debugger", "pattern": "\\bdebugger\\b", "reason": "Remove debugger statements.", "fix": "// removed" },
  { "id": "no_setTimeout_string", "pattern": "setTimeout\\s*\\(['\"]", "reason": "Avoid string in setTimeout.", "fix": "setTimeout(() => { /* code */ }, 1000)" },
  { "id": "no_setInterval_string", "pattern": "setInterval\\s*\\(['\"]", "reason": "Avoid string in setInterval.", "fix": "setInterval(() => { /* code */ }, 1000)" },
  { "id": "no_implicit_global", "pattern": "window\\.", "reason": "Avoid polluting window/global.", "fix": "use local import" },
  { "id": "no_document_all", "pattern": "document\\.all", "reason": "Deprecated API document.all.", "fix": "document.querySelectorAll('*')" },
  { "id": "no_octal", "pattern": "\\b0[0-9]+", "reason": "Avoid octal literals.", "fix": "use decimal or 0o prefix" },
  { "id": "no_bitwise", "pattern": "\\&\\&|\\|\\||\\^", "reason": "Avoid bitwise ops unless intentional.", "fix": "// verify" },
  { "id": "no_assign_in_cond", "pattern": "if\\s*\\(.*=.*\\)", "reason": "Avoid assignments in conditionals.", "fix": "===" },
  { "id": "no_array_constructor", "pattern": "new Array\\(", "reason": "Use [] or Array.from instead of new Array().", "fix": "[]" },
  { "id": "no_sort_default", "pattern": "\\.sort\\s*\\(\\)", "reason": "Always provide a comparator to sort().", "fix": "arr.sort((a,b) => a-b)" },
  { "id": "no_for_in", "pattern": "for\\s*\\(.*in.*\\)", "reason": "Avoid for..in on arrays, use for..of.", "fix": "for (const item of arr) {}" },
  { "id": "no_object_assign_proto", "pattern": "Object\\.assign\\(.*__proto__.*\\)", "reason": "Avoid modifying __proto__.", "fix": "Object.create(null)" },
  { "id": "no_object_create_null", "pattern": "Object\\.create\\(null\\)", "reason": "Avoid prototype-less objects unless needed.", "fix": "{}" },
  { "id": "no_document_write", "pattern": "document\\.write", "reason": "Avoid document.write (XSS risk).", "fix": "element.textContent" },
  { "id": "no_innerHTML", "pattern": "\\.innerHTML", "reason": "Avoid innerHTML, use textContent.", "fix": "element.textContent" },
  { "id": "no_outerHTML", "pattern": "\\.outerHTML", "reason": "Avoid outerHTML, use DOM APIs.", "fix": "element.replaceWith(newNode)" },
  { "id": "no_getElementsByTagName", "pattern": "getElementsByTagName", "reason": "Use querySelectorAll instead.", "fix": "document.querySelectorAll" },
  { "id": "no_getElementsByClassName", "pattern": "getElementsByClassName", "reason": "Use querySelectorAll instead.", "fix": "document.querySelectorAll('.class')" },
  { "id": "no_inline_event", "pattern": "on[a-zA-Z]+=\\s*['\"]", "reason": "Avoid inline event handlers.", "fix": "element.addEventListener" },
  { "id": "no_localStorage", "pattern": "localStorage", "reason": "Avoid localStorage (sync).", "fix": "indexedDB" },
  { "id": "no_sessionStorage", "pattern": "sessionStorage", "reason": "Avoid sessionStorage (sync).", "fix": "indexedDB" },
  { "id": "no_document_domain", "pattern": "document\\.domain", "reason": "Deprecated document.domain.", "fix": "postMessage" },
  { "id": "no_execCommand", "pattern": "document\\.execCommand", "reason": "Deprecated execCommand API.", "fix": "modern clipboard API" },
  { "id": "no_index_key", "pattern": "key=\\{index\\}", "reason": "Avoid array index as React key.", "fix": "key={item.id}" },
  { "id": "no_componentWillMount", "pattern": "componentWillMount", "reason": "Deprecated lifecycle.", "fix": "useEffect" },
  { "id": "no_componentWillUpdate", "pattern": "componentWillUpdate", "reason": "Deprecated lifecycle.", "fix": "getDerivedStateFromProps" },
  { "id": "no_findDOMNode", "pattern": "findDOMNode", "reason": "Deprecated ReactDOM.findDOMNode.", "fix": "useRef" },
  { "id": "no_defaultProps_function", "pattern": "defaultProps", "reason": "Avoid defaultProps on function components.", "fix": "use default params" },
  { "id": "no_class_component", "pattern": "extends React\\.Component", "reason": "Prefer function components + hooks.", "fix": "function Component()" },
  { "id": "no_px_zero", "pattern": "0px", "reason": "Use 0 instead of 0px.", "fix": "0" },
  { "id": "no_px_lineheight", "pattern": "line-height:\\s*\\d+px", "reason": "Avoid fixed px line-height.", "fix": "line-height: 1.5" },
  { "id": "no_vendor_prefix", "pattern": "-webkit|-moz|-ms-", "reason": "Avoid vendor-prefixed CSS.", "fix": "use standardized CSS" },
  { "id": "no_important", "pattern": "!important", "reason": "Avoid !important in CSS.", "fix": "increase selector specificity" },
  { "id": "no_inline_style", "pattern": "style=\\\".*\\\"", "reason": "Avoid inline styles.", "fix": "use CSS class" },
  { "id": "no_empty_block", "pattern": "\\{\\s*\\}", "reason": "Avoid empty code blocks.", "fix": "{ /* TODO */ }" },
  { "id": "no_unused_label", "pattern": "[a-zA-Z0-9_]+:\\s", "reason": "Avoid labels in JS.", "fix": "// remove label" },
  { "id": "no_arguments", "pattern": "\\barguments\\b", "reason": "Avoid arguments object, use rest params.", "fix": "...args" },
  { "id": "no_this_in_function", "pattern": "function\\s*\\(.*\\).*this", "reason": "Avoid this in plain functions.", "fix": "() => {}" },
  { "id": "no_class_field_public", "pattern": "public\\s", "reason": "Avoid explicit public, it's default.", "fix": "// remove public" }








]
